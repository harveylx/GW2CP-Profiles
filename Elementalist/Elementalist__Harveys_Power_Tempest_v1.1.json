{
	"@type": "profile_container",
	"build_ref": "https://snowcrows.com/builds/raids/elementalist/power-tempest",
	"configuration": {
		"Combat": {
			"BreakStun": true,
			"DefianceBreak": true,
			"EnableCombatBehaviour": false,
			"EnableCombatService": true,
			"EnableDownstateCombat": true,
			"EnablePetCombat": false,
			"RescuePets": false,
			"ResetSkillTransformations": true,
			"SwapRangerPets": false,
			"SwapWeapons": true,
			"WeaponFiller": false
		},
		"Targeting": {
			"EffectiveRangeAdjust": 1,
			"PreferMelee": false
		}
	},
	"default": 1,
	"export_config": 1,
	"game_modes": "100111",
	"global_script": [
		"var __8GCC: bool = false",
		"var __K5hm: Dictionary = get_skillbar()",
		"var __u2wd: SkillUtility = get_skill_utility()",
		"var __RJog: ControlledCharacter",
		"",
		"enum OVERLOADS {",
		"\toverload_air = 29719,",
		"}",
		"",
		"enum HEALS {",
		"\twash_the_pain_away = 29535,",
		"\telemental_harmony_fire = 34743,",
		"\telemental_harmony_air = 34724,",
		"\telemental_harmony_water = 34651,",
		"\telemental_harmony_earth = 34609,",
		"\tether_renewal = 5507,",
		"\tsignet_of_restoration = 5503,",
		"\tarcane_brilliance = 21656,",
		"}",
		"",
		"enum DEFIANCE_BREAK {",
		"\tcyclone = 30008,",
		"\ttidal_surge = 30864",
		"}",
		"",
		"func _process(__dKAO: float) -> void:",
		"\tif(not __8GCC):",
		"\t\treturn",
		"\tif __mA6x():",
		"\t\tabort_action()",
		"\tif not __RJog:",
		"\t\t__RJog = get_character_utility().get_cc()",
		"\tif not __hhsX():",
		"\t\ttoggle_combat_behavior(true)",
		"\t\treturn",
		"\ttoggle_combat_behavior(false)",
		"\tif not is_combat_assist_enabled():",
		"\t\treturn",
		"\t__hiy7(__RJog, __K5hm, __u2wd)",
		"",
		"func initialize() -> void:",
		"\tif __u2wd == null:",
		"\t\t__u2wd = get_skill_utility()",
		"\t__9efR()",
		"",
		"func select_skill(__uzLF: ControlledCharacter, target: Agent, __NT83: Array = []) -> SkillDataItem:",
		"\tif(not __pIaM() or not __Lyyw()):",
		"\t\t__8GCC = false",
		"\t\treturn null",
		"\tvar __vTtq: SkillUtility = get_skill_utility()",
		"\tvar __LRLn: AgentUtility = get_agent_utility()",
		"\tvar __Ke7J: SkillDataItem = __DLqI(__uzLF, target, __vTtq, __LRLn, __K5hm, __JUXj())",
		"\treturn __Ke7J",
		"",
		"func __07AS(skill_id: int, __YDeK: Dictionary, ___mL1: SkillUtility) -> SkillDataItem:",
		"\tvar skill: SkillDataItem = get_skill(skill_id)",
		"\tif ___mL1 == null:",
		"\t\t___mL1 = get_skill_utility()",
		"\tif ___mL1.is_on_cooldown(skill, false) or not ___mL1.is_in_skillbar(skill, __YDeK):",
		"\t\treturn null",
		"\telse:",
		"\t\treturn skill",
		"",
		"func __DLqI(__8Tm5: ControlledCharacter, target: Agent, __oh4a: SkillUtility, __SYMK: AgentUtility, __DSpx: Dictionary, __LSRF: int) -> SkillDataItem:",
		"\tvar __eRO5: SkillDataItem = __G60A(__oh4a, __SYMK, target, __LSRF)",
		"\tvar __fLm9: SkillDataItem = __alYN(__oh4a, __DSpx, __LSRF)",
		"\t__OLS3(__oh4a, target, __LSRF)",
		"\tvar __cUNe: SkillDataItem = __xKf9(__oh4a, __LSRF)",
		"\tvar __fgdd: SkillDataItem = __Gj3j(__oh4a, __DSpx, __LSRF)",
		"\t",
		"\tif not __eRO5 == null:",
		"\t\treturn __eRO5",
		"\tif not __fLm9 == null:",
		"\t\treturn __fLm9",
		"\tif not __cUNe == null:",
		"\t\treturn __cUNe",
		"\tif not __fgdd == null:",
		"\t\treturn __fgdd",
		"\treturn null",
		"",
		"func __G60A(__K1gc: SkillUtility, __MggB: AgentUtility, target: Agent, __WDJz: int) -> SkillDataItem:",
		"\tif __MggB.has_break_bar(target) and target.break_bar.state == 0:",
		"\t\tif (__WDJz == 3):",
		"\t\t\tvar __VAJx: SkillDataItem = get_skill(30008)",
		"\t\t\tif not __K1gc.is_on_cooldown(__VAJx):",
		"\t\t\t\treturn __VAJx",
		"\t\tif (__WDJz == 2):",
		"\t\t\tvar __cCA0: SkillDataItem = get_skill(30864)",
		"\t\t\tif not __K1gc.is_on_cooldown(__cCA0):",
		"\t\t\t\treturn __cCA0",
		"\treturn null",
		"",
		"func __xKf9(__R1XB: SkillUtility, __GnRc: int) -> SkillDataItem:",
		"\tif (__GnRc != 3):",
		"\t\tvar __i8XX: SkillDataItem = get_from_skillbar(5494)",
		"\t\t",
		"\t\tvar __LshQ: SkillDataItem = get_from_skillbar(5675)",
		"\t\tvar __sXRu: SkillDataItem = get_from_skillbar(29533)",
		"\t\tvar __h4i4: SkillDataItem = get_from_skillbar(5692)",
		"\t\t",
		"\t\tif not __R1XB.is_on_cooldown(__i8XX) and (not __R1XB.is_being_cast(__LshQ) or not __R1XB.is_being_cast(__sXRu) or not __R1XB.is_being_cast(__h4i4)):",
		"\t\t\treturn __i8XX",
		"\t",
		"\telse:",
		"\t\tvar __VhfX: SkillDataItem = get_from_skillbar(29719)",
		"\t\tvar __LEwH: SkillDataItem = get_from_skillbar(5492)",
		"\t\tvar ___QS4: SkillDataItem = get_from_skillbar(5493)",
		"\t\t",
		"\t\tif not __R1XB.is_on_cooldown(__LEwH) and __R1XB.get_remaining_cooldown_time(__VhfX) > 5000:",
		"\t\t\treturn __LEwH",
		"\t\telif not __R1XB.is_on_cooldown(___QS4) and __R1XB.get_remaining_cooldown_time(__VhfX) > 5000:",
		"\t\t\treturn ___QS4",
		"\treturn null",
		"",
		"func __OLS3(__sujf: SkillUtility, target: Agent, __3wtm: int) -> void:",
		"\tvar skills = []",
		"\t",
		"\t",
		"\tif __3wtm == 1:",
		"\t\tskills = [",
		"\t\t\tget_from_skillbar(5675),",
		"\t\t\tget_from_skillbar(29533),",
		"\t\t\tget_from_skillbar(5692)",
		"\t\t]",
		"\telif __3wtm == 2:",
		"\t\tskills = [",
		"\t\t\tget_from_skillbar(5538),",
		"\t\t\tget_from_skillbar(5510)",
		"\t\t]",
		"\telif __3wtm == 3:",
		"\t\tskills = [",
		"\t\t\tget_from_skillbar(30795),",
		"\t\t\tget_from_skillbar(5561)",
		"\t\t]",
		"\t",
		"\t",
		"\tfor skill in skills:",
		"\t\tif skill != null and not __sujf.is_on_cooldown(skill):",
		"\t\t\tcast_skill(skill, target)",
		"",
		"func __alYN(__qp_C: SkillUtility, __7RiW: Dictionary, __VkLi: int) -> SkillDataItem:",
		"\tif (__VkLi != 3):",
		"\t\treturn",
		"\tvar __HXyS: Dictionary = __XwuD(29719, __qp_C, __7RiW)",
		"\tif not __HXyS.on_cd:",
		"\t\treturn __HXyS.skill",
		"\treturn null",
		"\t",
		"func __Gj3j(__CBD9: SkillUtility, __2taY: Dictionary, __nARk: int) -> SkillDataItem:",
		"\tif (__nARk != 3):",
		"\t\treturn",
		"\tvar __0di8: Dictionary = __XwuD(5737, __CBD9, __2taY)",
		"\tif not __0di8.on_cd:",
		"\t\treturn __0di8.skill",
		"\treturn null",
		"",
		"func __hiy7(__qdR6: ControlledCharacter, __a837: Dictionary, __s8_i: SkillUtility):",
		"\t",
		"\t__qdR6 = __qdR6 if __qdR6 != null else get_character_utility().get_cc()",
		"\t__s8_i = __s8_i if __s8_i != null else get_skill_utility()",
		"\t",
		"\tvar target = __qdR6.selection",
		"\tvar __Z9tj: SkillDataItem = get_from_skillbar(29719)",
		"\t",
		"\t",
		"\tvar __phrQ: SkillDataItem = get_from_skillbar(30662)",
		"\tif __phrQ and not __s8_i.is_on_cooldown(__phrQ) and target != null:",
		"\t\tcast_skill(__phrQ, target)",
		"\t",
		"\t",
		"\tvar __IQiY: SkillDataItem = get_from_skillbar(25499)",
		"\tif __IQiY and not __s8_i.is_on_cooldown(__IQiY) and target != null:",
		"\t\tcast_skill(__IQiY, target)",
		"\t\t",
		"\t",
		"\tvar __0Q2N: SkillDataItem = get_from_skillbar(5526)",
		"\tif __JUXj() == 3 and __0Q2N and not __s8_i.is_on_cooldown(__0Q2N) and not __u2wd.is_being_cast(__Z9tj) and target != null:",
		"\t\tcast_skill(__0Q2N, target)",
		"\t\t",
		"\t",
		"\tvar __HJzC: SkillDataItem = get_from_skillbar(5694)",
		"\tif __JUXj() == 3 and __HJzC and not __s8_i.is_on_cooldown(__HJzC) and target != null:",
		"\t\tLog.warn(str(cast_skill(__HJzC, target)))",
		"",
		"func __XwuD(skill_id: int, __MHOv: SkillUtility, __DZfg: Dictionary) -> Dictionary:",
		"\tvar skill: SkillDataItem = get_skill(skill_id)",
		"\tif __MHOv == null:",
		"\t\t__MHOv = get_skill_utility()",
		"\tvar __yqMt: bool = __MHOv.is_on_cooldown(skill, false)",
		"\tvar __EFZa: float = __MHOv.get_remaining_cooldown_time(skill, false)",
		"\tvar __zDlu: bool = __MHOv.is_in_skillbar(skill, __DZfg)",
		"\treturn {",
		"\t\t\"skill\": skill,",
		"\t\t\"on_cd\": __yqMt,",
		"\t\t\"cd_time\": __EFZa,",
		"\t\t\"on_bar\": __zDlu,",
		"\t}",
		"",
		"func __9efR() -> bool:",
		"\tif __K5hm == _skillbar:",
		"\t\treturn true",
		"\telse:",
		"\t\t__K5hm = get_skillbar()",
		"\t\tif __K5hm == _skillbar:",
		"\t\t\treturn true",
		"\t\treturn false",
		"\t\t",
		"func __mA6x() -> bool:",
		"\tvar __0iIv := {}",
		"\tvar __E_PO = [HEALS, DEFIANCE_BREAK, OVERLOADS]",
		"\tfor enum_type in __E_PO:",
		"\t\tvar __WAnX = __1lml(enum_type.values())",
		"\t\tfor key in __WAnX.keys():",
		"\t\t\t__0iIv[key] = __WAnX[key]",
		"\treturn __JUXj() == 3 and not __u2wd.is_on_cooldown(__0iIv[29719]) and not __u2wd.is_any_being_cast(__0iIv)",
		"\t",
		"",
		"func __1lml(__y3zS: Array) -> Dictionary:",
		"\tvar __BEAb := {}",
		"\tfor value in __y3zS:",
		"\t\t__BEAb[value] = get_skill(value)",
		"\treturn __BEAb",
		"",
		"func __Lyyw() -> bool:",
		"\tvar __V7b2: bool = get_weapon(true, false) == 4",
		"\tvar __rHA2: bool = get_weapon(false, false) == 9",
		"\tif (not __V7b2):",
		"\t\tLog.warn(\"Character does not have a Scepter equipped. Profile will not run\")",
		"\t\t__8GCC = false",
		"\tif (not __rHA2):",
		"\t\tLog.warn(\"Character does not have a Warhorn equipped. Profile will not run\")",
		"\t\t__8GCC = false",
		"\t__8GCC = true",
		"\treturn __8GCC",
		"",
		"func __pIaM() -> bool:",
		"\tif get_elite_spec_id() != 48:",
		"\t\tLog.warn('Profile \"%s\" needs a Tempest. See profile description for instructions.' % [get_profile_name()])",
		"\t\t__8GCC = false",
		"\t__8GCC = true",
		"\treturn __8GCC",
		"",
		"func __hhsX() -> bool:",
		"\tif not __pIaM():",
		"\t\treturn false",
		"\treturn true",
		"\t",
		"func __JUXj() -> int:",
		"\treturn get_character_utility().get_profession_state()"
	],
	"last_updated": "2024-07-22 00:01:50",
	"profession_id": 6,
	"profession_name": "Elementalist",
	"profile_name": "Harveys Power Tempest v1.0",
	"template_code": "[&DQYpLxE+MBfHEgAAwxIAAL4BAADLAAAAJgAAAAAAAAAAAAAAAAAAAAAAAAA=]"
}