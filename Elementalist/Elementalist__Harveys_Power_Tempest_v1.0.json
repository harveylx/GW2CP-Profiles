{
	"@type": "profile_container",
	"build_ref": "https://snowcrows.com/builds/raids/elementalist/power-tempest",
	"configuration": {
		"Combat": {

		},
		"Targeting": {
			"EffectiveRangeAdjust": 1,
			"PreferMelee": false
		}
	},
	"default": 1,
	"game_modes": "100111",
	"global_script": [
		"const __bWvf = preload(\"res://plugins/gw2cp/Utility/AgentUtility.gd\")",
		"const __iLpU = preload(\"res://plugins/gw2cp/Utility/CharacterUtility.gd\")",
		"const __9NJ_ = preload(\"res://plugins/gw2cp/Diagnostics/Log.gd\")",
		"const __nFSZ = preload(\"res://plugins/gw2cp/Utility/SkillUtility.gd\")",
		"const __u01l = preload(\"res://plugins/gw2cp/Repository/Data/SkillDataItem.gd\")",
		"",
		"var __OO3q: Dictionary",
		"@onready var __WNgM: __9NJ_ = $Log",
		"@onready var __wNFk: CombatManager = ClientSession.gs.get_manager(CombatManager)",
		"",
		"var runnable: bool = false",
		"var __Fs7t: float = 0.0",
		"var __ytOr: float = 500",
		"var __K5hm: Dictionary = get_skillbar()",
		"var __u2wd: __nFSZ = get_skill_utility()",
		"var __RJog: ControlledCharacter",
		"",
		"func __JUXj() -> int:",
		"\treturn get_character_utility().get_profession_state()",
		"",
		"func _process(__dKAO: float) -> void:",
		"\tif not runnable:",
		"\t\treturn",
		"\tvar __00rz: __u01l = get_from_skillbar(29719)",
		"\tif __JUXj() == 3 and not __u2wd.is_on_cooldown(__00rz) and not __u2wd.is_being_cast(__00rz):",
		"\t\tabort_action()",
		"\tif not __RJog:",
		"\t\t__RJog = get_character_utility().get_cc()",
		"\tif not __hhsX():",
		"\t\ttoggle_combat_behavior(true)",
		"\t\treturn",
		"\ttoggle_combat_behavior(false)",
		"\tif not is_combat_assist_enabled():",
		"\t\treturn",
		"\t__8mQb(__RJog, __K5hm, __u2wd)",
		"",
		"func initialize() -> void:",
		"\tif __u2wd == null:",
		"\t\t__u2wd = get_skill_utility()",
		"\t__9efR()",
		"",
		"func select_skill(__uzLF: ControlledCharacter, target: Agent, __NT83: Array = []) -> __u01l:",
		"\tif(not __hhsX() or not _are_weapons_valid()):",
		"\t\trunnable = false",
		"\t\treturn null",
		"\tvar __7RVR: __nFSZ = get_skill_utility()",
		"\tvar __wAo8: __u01l = __JWcm(__uzLF, target, __7RVR, __K5hm, __JUXj())",
		"\tvar __CJ0b: __u01l = get_skill(29719)",
		"\tvar __jMHX: bool = not __u2wd.is_on_cooldown(__CJ0b)",
		"\tif __wAo8 == __CJ0b and __jMHX and target:",
		"\t\tcast_skill(__CJ0b, target)",
		"\treturn __wAo8",
		"",
		"func __07AS(skill_id: int, __YDeK: Dictionary, ___mL1: __nFSZ) -> __u01l:",
		"\tvar skill: __u01l = get_skill(skill_id)",
		"\tif ___mL1 == null:",
		"\t\t___mL1 = get_skill_utility()",
		"\tif ___mL1.is_on_cooldown(skill, false) or not ___mL1.is_in_skillbar(skill, __YDeK):",
		"\t\treturn null",
		"\telse:",
		"\t\treturn skill",
		"",
		"func __JWcm(__ooED: ControlledCharacter, target: Agent, __ovti: __nFSZ, __vVEy: Dictionary, __12wY: int) -> __u01l:",
		"\tvar __9ot5: __u01l = __UJLR(__ovti, __vVEy, __12wY)",
		"\t__LWnM(__ovti, target, __12wY)",
		"\tvar __mEIu: __u01l = __Xcci(__ovti, __12wY)",
		"\tvar __abfr: __u01l = __W3lL(__ovti, __vVEy, __12wY)",
		"\tif __9ot5 != null:",
		"\t\treturn __9ot5",
		"\tif __mEIu != null:",
		"\t\treturn __mEIu",
		"\tif __abfr != null:",
		"\t\treturn __abfr",
		"\treturn null",
		"",
		"func __Xcci(__iVsc: __nFSZ, __SRTg: int) -> __u01l:",
		"\tvar __Et6q = Time.get_ticks_msec()",
		"\tif (__Et6q - __Fs7t) < __ytOr:",
		"\t\treturn null",
		"\tif __SRTg != 3:",
		"\t\tvar __RBr8: __u01l = get_from_skillbar(5494)",
		"\t\tvar __BVFV: __u01l = get_from_skillbar(5675)",
		"\t\tvar __qDgW: __u01l = get_from_skillbar(29533)",
		"\t\tvar __zbVW: __u01l = get_from_skillbar(5692)",
		"\t\tif not __iVsc.is_on_cooldown(__RBr8) and (not __iVsc.is_being_cast(__BVFV) or not __iVsc.is_being_cast(__qDgW) or not __iVsc.is_being_cast(__zbVW)):",
		"\t\t\t__Fs7t = Time.get_ticks_msec()",
		"\t\t\treturn __RBr8",
		"\telse:",
		"\t\tvar __sbH4: __u01l = get_from_skillbar(29719)",
		"\t\tvar __SuwE: __u01l = get_from_skillbar(5492)",
		"\t\tvar __T7rJ: __u01l = get_from_skillbar(5493)",
		"\t\tif not __iVsc.is_on_cooldown(__SuwE) and __iVsc.is_on_cooldown(__sbH4):",
		"\t\t\t__Fs7t = Time.get_ticks_msec()",
		"\t\t\treturn __SuwE",
		"\t\telif not __iVsc.is_on_cooldown(__T7rJ) and __iVsc.is_on_cooldown(__sbH4):",
		"\t\t\t__Fs7t = Time.get_ticks_msec()",
		"\t\t\treturn __T7rJ",
		"\treturn null",
		"",
		"func __LWnM(__seaN: __nFSZ, target: Agent, __kc4d: int) -> void:",
		"\tvar skills = []",
		"\tif __kc4d == 1:",
		"\t\tskills = [",
		"\t\t\tget_from_skillbar(5675),",
		"\t\t\tget_from_skillbar(29533),",
		"\t\t\tget_from_skillbar(5692)",
		"\t\t]",
		"\telif __kc4d == 2:",
		"\t\tskills = [",
		"\t\t\tget_from_skillbar(5538),",
		"\t\t\tget_from_skillbar(5510)",
		"\t\t]",
		"\telif __kc4d == 3:",
		"\t\tskills = [",
		"\t\t\tget_from_skillbar(30795),",
		"\t\t\tget_from_skillbar(5561)",
		"\t\t]",
		"\tfor skill in skills:",
		"\t\tif skill != null and not __seaN.is_on_cooldown(skill):",
		"\t\t\tcast_skill(skill, target)",
		"",
		"func __UJLR(__Q5Nn: __nFSZ, __d7s8: Dictionary, __amEX: int) -> __u01l:",
		"\tif __amEX != 3:",
		"\t\treturn null",
		"\tvar __ED2c: Dictionary = __XwuD(29719, __Q5Nn, __d7s8)",
		"\tif not __ED2c[\"on_cd\"]:",
		"\t\treturn __ED2c[\"skill\"]",
		"\treturn null",
		"",
		"func __W3lL(__Tw_O: __nFSZ, __dfhI: Dictionary, __khhG: int) -> __u01l:",
		"\tif __khhG != 3:",
		"\t\treturn null",
		"\tvar __FL_o: Dictionary = __XwuD(5737, __Tw_O, __dfhI)",
		"\tif not __FL_o[\"on_cd\"]:",
		"\t\treturn __FL_o[\"skill\"]",
		"\treturn null",
		"",
		"func __8mQb(__wVx6: ControlledCharacter, __lCVv: Dictionary, __ry3L: __nFSZ):",
		"\t__wVx6 = __wVx6 if __wVx6 != null else get_character_utility().get_cc()",
		"\t__ry3L = __ry3L if __ry3L != null else get_skill_utility()",
		"\tvar target = __wVx6.selection",
		"\tvar __rNlV: __u01l = get_from_skillbar(29719)",
		"\tvar __mnjY: __u01l = get_from_skillbar(30662)",
		"\tif __mnjY and not __ry3L.is_on_cooldown(__mnjY) and target != null:",
		"\t\tcast_skill(__mnjY, target)",
		"\tvar __kIOk: __u01l = get_from_skillbar(25499)",
		"\tif __kIOk and not __ry3L.is_on_cooldown(__kIOk) and target != null:",
		"\t\tcast_skill(__kIOk, target)",
		"\tvar __osG1: __u01l = get_from_skillbar(5526)",
		"\tif __JUXj() == 3 and __osG1 and not __ry3L.is_on_cooldown(__osG1) and not __u2wd.is_being_cast(__rNlV) and target != null:",
		"\t\tcast_skill(__osG1, target)",
		"\tvar __EVVW: __u01l = get_from_skillbar(5694)",
		"\tif __JUXj() == 3 and __EVVW and not __ry3L.is_on_cooldown(__EVVW) and target != null:",
		"\t\t__WNgM.warn(str(cast_skill(__EVVW, target)))",
		"",
		"func __XwuD(skill_id: int, __MHOv: __nFSZ, __DZfg: Dictionary) -> Dictionary:",
		"\tvar skill: __u01l = get_skill(skill_id)",
		"\tif __MHOv == null:",
		"\t\t__MHOv = get_skill_utility()",
		"\tvar __FGNJ: bool = __MHOv.is_on_cooldown(skill, false)",
		"\tvar __zUgX: float = __MHOv.get_remaining_cooldown_time(skill, false)",
		"\tvar __OkAR: bool = __MHOv.is_in_skillbar(skill, __DZfg)",
		"\treturn {",
		"\t\t\"skill\": skill,",
		"\t\t\"on_cd\": __FGNJ,",
		"\t\t\"cd_time\": __zUgX,",
		"\t\t\"on_bar\": __OkAR,",
		"\t}",
		"",
		"func __9efR() -> bool:",
		"\tif __K5hm == __OO3q:",
		"\t\treturn true",
		"\telse:",
		"\t\t__K5hm = get_skillbar()",
		"\t\tif __K5hm == __OO3q:",
		"\t\t\treturn true",
		"\t\treturn false",
		"",
		"func _are_weapons_valid() -> bool:",
		"\tvar has_scepter: bool = get_weapon(true, false) == WeaponTypeEnum.Scepter",
		"\tvar has_warhorn: bool = get_weapon(false, false) == WeaponTypeEnum.Warhorn",
		"\tif not has_scepter:",
		"\t\tLog.warn(\"Character does not have a Scepter equipped. Profile will not run\")",
		"\t\trunnable = false",
		"\tif not has_warhorn:",
		"\t\tLog.warn(\"Character does not have a Warhorn equipped. Profile will not run\")",
		"\t\trunnable = false",
		"\trunnable = true",
		"\treturn runnable",
		"",
		"func __pIaM() -> bool:",
		"\tif get_elite_spec_id() != 48:",
		"\t\tLog.warn('Profile \"%s\" needs a Tempest. See profile description for instructions.' % [get_profile_name()])",
		"\t\trunnable = false",
		"\trunnable = true",
		"\treturn runnable",
		"",
		"func __hhsX() -> bool:",
		"\tif not __pIaM():",
		"\t\t__WNgM.warn('Profile \"%s\" needs a Tempest. See profile description for instructions.' % [get_profile_name()])",
		"\t\treturn false",
		"\treturn true"
	],
	"last_updated": "2024-07-21 22:05:44",
	"profession_id": 6,
	"profession_name": "Elementalist",
	"profile_name": "Harveys Power Tempest v1.0",
	"template_code": "[&DQYpLxE+MBfHEgAAwxIAAL4BAADLAAAAJgAAAAAAAAAAAAAAAAAAAAAAAAA=]"
}